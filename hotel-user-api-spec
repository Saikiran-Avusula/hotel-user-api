openapi: 3.0.3
info:
  title: Hotel Search
  version: v1
  description: |
    The **Hotel Search API** enables management of users and hotels with simple RESTful operations.  
    With this API, you can:
    - Register and manage users  
    - Add and list available hotels  
    - Retrieve hotels for a specific user based on their city and pincode  
    - Authenticate users through login to fetch nearby hotels  

    It is designed as a foundation for hotel discovery and user-centric booking workflows.

paths:
  /adduser:
    post:
      summary: "Register a new user"
      description: "Creates a new user profile with username, email, city, and pincode."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              username: "rahul123"
              email: "rahul.kumar@example.com"
              city: "Hyderabad"
              pincode: "500001"
      responses:
        "200":
          description: "User created successfully"
          content:
            application/json:
              example:
                message: "User rahul123 registered successfully"
        "400":
          description: "Invalid input data"

  /allusers:
    get:
      summary: "Retrieve all users"
      description: "Fetches a list of all registered users."
      responses:
        "200":
          description: "List of all users"
          content:
            application/json:
              example:
                - username: "rahul123"
                  email: "rahul.kumar@example.com"
                  city: "Hyderabad"
                  pincode: "500001"
                - username: "ananya99"
                  email: "ananya.sharma@example.com"
                  city: "Mumbai"
                  pincode: "400001"

  /login:
    post:
      summary: "User login"
      description: "Authenticates a user and provides access to hotel search."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
            example:
              username: "rahul123"
              password: "test@123"
      responses:
        "200":
          description: "Login successful"
          content:
            application/json:
              example:
                message: "Welcome rahul123! You are now logged in."
        "401":
          description: "Unauthorized - invalid credentials"

  /userhotels/{username}:
    get:
      summary: "Get hotels near a user"
      description: "Fetch hotels based on the user's registered city and pincode."
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
          example: "rahul123"
      responses:
        "200":
          description: "List of nearby hotels"
          content:
            application/json:
              example:
                username: "rahul123"
                city: "Hyderabad"
                hotels:
                  - hotelName: "Taj Banjara"
                    city: "Hyderabad"
                    pincode: "500034"
                  - hotelName: "ITC Kohenur"
                    city: "Hyderabad"
                    pincode: "500081"
        "404":
          description: "User not found"

  /addhotel:
    post:
      summary: "Create a new hotel"
      description: "Adds a hotel with name, city, and pincode into the system."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hotel'
            example:
              hotelName: "Taj Banjara"
              city: "Hyderabad"
              pincode: "500034"
      responses:
        "200":
          description: "Hotel created successfully"
          content:
            application/json:
              example:
                message: "Hotel Taj Banjara added in Hyderabad"
        "400":
          description: "Invalid hotel details"

  /allhotels:
    get:
      summary: "Get all hotels"
      description: "Returns all hotels stored in the system."
      responses:
        "200":
          description: "List of all hotels"
          content:
            application/json:
              example:
                - hotelName: "Taj Banjara"
                  city: "Hyderabad"
                  pincode: "500034"
                - hotelName: "The Oberoi"
                  city: "Bangalore"
                  pincode: "560001"
                - hotelName: "The Taj Mahal Palace"
                  city: "Mumbai"
                  pincode: "400001"
                - hotelName: "Leela Goa"
                  city: "Goa"
                  pincode: "403706"

components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        city:
          type: string
        pincode:
          type: string
    Hotel:
      type: object
      properties:
        hotelName:
          type: string
        city:
          type: string
        pincode:
          type: string
